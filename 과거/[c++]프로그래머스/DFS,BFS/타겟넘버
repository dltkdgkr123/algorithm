// -, + 를 각각 탐색으로 생각하여 DFS를 구현한다.
// 전위연산이므로 맨 앞의 부호를 예외처리or 각각 +,-로 하여 함수를 두번 실행한다.
// target_number를 인자로 재귀함수에 계속 전달하는 것보다 전역변수로 선언함이 낫다고 생각했다.

#include <string>
#include <vector>

using namespace std;

int value = 0;
int target_number;

void dfs(vector<int>& numbers, int count, int sum)
{
    
    if (count == numbers.size()) 
    {
        if (sum == target_number)
            value++;
        
        return;
    }
        
    dfs(numbers, count+1, sum + numbers[count]);
    dfs(numbers, count+1, sum - numbers[count]);
        
}


int solution(vector<int> numbers, int target) {
    int answer = 0;
    target_number = target;
    dfs(numbers, 1, numbers[0]);
    dfs(numbers, 1, -numbers[0]);

    answer = value;
    return answer;
  
}
