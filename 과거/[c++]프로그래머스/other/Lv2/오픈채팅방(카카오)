/*
  sstream = stringstream 문자열을 공백 기준으로 파싱할때 주로 사용한다.
  
  + 기호를 통해 문자열을 연결한다.
  
  최종 바뀐 아이디로 answer이 return되어야 하므로 한 번 탐색하며 enter 및 change인 경우만 맵에 아이디를 저장하며 갱신해가고,
  
  다시 한번 탐색하며 enter 및 leave인 경우만 map에 최종 저장된 key값으로 answer vector에 push한다
  
  
  m[uid] = id; 부분에서 맵은 중복key값 다른value insert시 무시된다고 배워서 한번 clear하고 대입했으나, clear 부분을 지워도 정답처리 되었다.
  -> 이 코드에서는 insert가 아닌 대입이므로 갱신되는듯 하다.
*/

#include <string>
#include <vector>
#include <unordered_map>
#include <sstream>
#include <iostream>

using namespace std;


vector<string> solution(vector<string> record) {
    vector<string> answer;
    unordered_map<string, string> m;
    string act;
    string uid;
    string id;
    for (int i = 0;i < record.size();i++)
    {
        stringstream ss(record[i]);
        ss >> act;

        if (act == "Enter" || act == "Change")
        {
            ss >> uid;
            ss >> id;
            m[uid] = id;
        }
    }

    for (int i = 0;i < record.size();i++)
    {
        stringstream ss(record[i]);
        ss >> act;
        ss >> uid;

        if (act == "Enter")
            answer.push_back(m[uid] + "님이 들어왔습니다.");

        else if (act == "Leave")
            answer.push_back(m[uid] + "님이 나갔습니다.");
    }
    return answer;
}
