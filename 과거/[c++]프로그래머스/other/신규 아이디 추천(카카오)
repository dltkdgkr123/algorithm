/*
    배열 및 문자열을 earse()할 때, len/size가 가변하여 for문의 루프범위에 지장을준다.
    해당 문제는 단순히 earse() 때마다 i--;를 하면 됐다.
*/
#include <string>
#include <vector>
#include <iostream>

using namespace std;

string solution(string new_id) {
    int idx = -2; // 현재 인덱스 i와 비교하여 idx = i - 1일 때 비교 할 것이므로 처음에 동작하지 않도록 -2로 초기화
    
    for (int i = 0; i < new_id.length(); i++)
    {

        if (new_id[i] >= 48 && new_id[i] <= 57) // 숫자면 계속
            continue;

        if (new_id[i] >= 65 && new_id[i] <= 90) // 대문자 소문자로 치환
            new_id[i] += 32;

        else if (new_id[i] < 97 || new_id[i] > 122) // 대문자/숫자가 아니고 소문자가 아니면
        {
            if (new_id[i] == 46) // 기호(.) 이면
            {
                if (idx == i - 1) // 이전 인덱스도 .이면 삭제
                {
                    new_id.erase(i, 1);
                    i--;
                    continue;
                }
                
                idx = i; // 이전 인덱스가 .이 아니라면 현재 인덱스로 idx 대입
                continue;
            }
            else if (new_id[i] == 45 || new_id[i] == 95) // -/_이면 계속
                continue;

            new_id.erase(i, 1); // 대문자/소문자/숫자/세개의 기호도 아니면 삭제
            i--;
        }
    }

    if(*(new_id.begin()) == 46) // 시작값 .이면 삭제
        new_id.erase(new_id.begin());

    if (*(new_id.end() - 1) == 46) // 끝값 .이면 삭제
        new_id.erase(new_id.end() - 1);

    if (new_id.empty()) // 빈 문자열이면 a를 더함
        new_id += 'a';

    if (new_id.length() > 15) // 길이가 16보다 크면 15로 조정
    {
        new_id.erase(15);
    }

    if (*(new_id.end() - 1) == 46) // 끝값 .이면 삭제
        new_id.erase(new_id.end() - 1);

    while (new_id.length() < 3) // 길이가 3이 될 때 까지 마지막 문자를 더함
    {
        new_id += *(new_id.end() - 1);
    }

    return new_id;
}
