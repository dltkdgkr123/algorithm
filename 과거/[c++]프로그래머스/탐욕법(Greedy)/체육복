/*
    학생수 n의 크기, 초기값 1로 배열을 선언, lost한 학생-- reserve한 학생++

    각 인덱스 비교하여 i=0이고 i-1 or i+1이 2면 각각 ++, -- 후 0이 아닌값의 개수 리턴


    다른 풀이에서는 어차피 학생은 최대 2개의 여벌 체육복을 가지므로 두벌(여분)/잃어버린/한벌 각각 1/-1/0으로 놓았음
    
    또한, 내 코드에서 인덱스 끝열을 예외처리 했던 대신 배열을 더 크게 선언해 0번째, n+1번째를 사용하지 않는 방식이였음

    -> 트리에서 0번째 인덱스를 사용하지 않는 대신 훨씬 가독성이 높았던게 떠오르면서 더 효율적이라고 생각했음

*/

#include <vector>

using namespace std;

int solution(int n, vector<int> lost, vector<int> reserve) {
    int answer = 0;

    vector<int> v(n, 1);

    for (int i = 0; i < lost.size(); i++)
        v[lost[i]-1]--;

    for (int i = 0; i < reserve.size(); i++)
        v[reserve[i]-1]++;

    if (v[0] == 0 && v[1] == 2)
    {
        v[0]++;
        v[1]--;
    }


    for (int i = 1; i < v.size()-1; i++)
    {
        if (v[i] == 0 && v[i - 1] == 2)
        {
            v[i]++;
            v[i - 1]--;
        }

        if (v[i] == 0 && v[i + 1] == 2)
        {
            v[i]++;
            v[i + 1]--;
        }
    }

    if (v[n - 1] == 0 && v[n - 2] == 2)
    {
        v[n - 1]++;
        v[n - 2]--;
    }
    
    for (int i = 0; i < v.size(); i++)
    {
        if (v[i] != 0)
            answer++;
    }

    return answer;
}
