/*

착용 부위 = key 

각 key별로 value를 구하고, value+1들을 모두 곱한뒤에 -1한다.

value + 1 -> 안입은 경우가 있기 때문

answer - 1 -> 모두 안입는 경우는 없기 때문

answer = 1; -> 벡터들을 곱해나가야 하므로 0이 되지 않기위해

key = 0이 아닌값을 찾는 대신에, iterator을 사용할 수도 있다.

같은 의상 (중복된 value)가 없으므로, multimap을 쓸 필요 없이 해당 부위의 의상이 들어오면 value의 int값을 ++한다
*/

#include <string>
#include <vector>
#include <unordered_map>

using namespace std;

int solution(vector<vector<string>> clothes) {
    int answer = 1;
    vector<int> v;
    unordered_map<string, int> hash;

    for (int i = 0; i < clothes.size(); i++)
    {
        hash[clothes[i][1]]++;
    }

    for (int i = 0; i < clothes.size();i++)
    {

        if (hash[clothes[i][1]] != 0) // key가 0이 아니면(벡터에 값을 포함시키지 않았으면)
        {
            v.push_back(hash[clothes[i][1]]+1); // 벡터에 push후, 0으로 바꿈
            hash[clothes[i][1]] = 0;
        }
    }
       
    for (int i = 0; i < v.size(); i++)
        answer *= v[i];


    return answer-1;
}
